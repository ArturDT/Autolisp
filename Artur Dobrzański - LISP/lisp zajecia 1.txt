zad zrobic fajny program z wykorzystaniem coammand i instrukcji warunkowych, petli czy co tam. (sprawdzic case)


vlisp - uruchamianie œrodowiska lisp,
setq - przypisz,
(setq x 10) - przypisz wartoœæ 10 do zmiennej x (nie trzeba wczeœniej deklarowaæ x),
(setq x "dziesiec") - to samo tylko string,
(setq xx (+ 9 1)) - dodaj do 10 1 a nastêpnie przypisz pod xx wynik dzia³ania tej operacji - kolejnoœæ wykonywania zadañ w lisp,
; - to co po œredniku jest komentarzem
(setq lista (list 10 20 30 40)) - tworzenie listy 
progn - funkcje w blok ³¹czy
-------------------------------------------------
(setq liczby (list 0 1 2 3 4 5))
(foreach cokolwiek liczby         ; dla kazdego elementu rysuje aaaaaaa ... 
(princ "aaaa"))
-------------------------------------------------
(setq liczby (list 0 1 2 3 4 5))
(setq wynik 0)

--
(foreach liczba liczby         ; dla kazdego elementu rysuje aaaaaaa ... 
(setq wynik (+ wynik liczba)))
---
(repeat (lenght liczby)
(princ "aaaaa"))   ; petla repeat
---
(while (< liczby 10) )

getint getstring
-----------------------
(command "line") ; w autocad wywoluje komende
(command "line" (list 100 0) (list -100 100)) ; w autocad wywoluje komende z parametrami
 (command "line" (list 100 0) (list -100 100) (list 0 0) "_c");przerwanie lini
-------------------

-------
listy:


(print "Informacje o liscie:")
(setq lista (list 10 25 20 45 50 35 30 15 40 5)) ;tworzenie listy
(print "lista nieposortowana")
	(prin1 lista)
(print "liczba elementów w liscie:")
	(prin1 (length lista))
(print "lista odwrocona: ")
	(prin1 (reverse lista))
(print "lista posortowana rosnaco: ")
	(prin1 (vl-sort lista '<))\
(print "lista posortowana malejaco: ")
	(prin1 (vl-sort lista '>))
(print "pierwszy element listy:  ")
	(prin1 (car lista))
(print "ostatni element listy:  ")
	(prin1 (last lista))
(print "trzeci element listy (liczone od 0):  ")
	(prin1 (nth 3 lista))
(print "elementy z listy od elementu o wartosci 30:  ")
	(prin1 (member 30 lista))
(print "koniec informacji o liscie")
(print)

----------------------------------------------------

(print "program rysuj¹cy")
;(command "_line" (list 0 0) (list 0 100) (list 100 100) (list 100 100)"_c")

(setq x1 0)
(setq y1 0)
(setq r1  20)
(setq kolumny (getdist))
(setq wiersze (getdist))
(repeat 5
  (progn
(setq x1(+ 100 x1))
(setq y1(+ 100 y1))
(setq r1(+ 5 r1))
(command "_circle" (list x1 y1) r1)
(command "_extrude" (entlast) "" r1)
       )	)
(print "podaj wysokosc mniejsza od najwyzszego walca:")
(setq hh (getdist))
(if (< hh r1)
  (progn
    (command "_rectang" (list 0 0) (list 700 750))
    (setq R1 (entlast))
    (command "_extrude" R1 "" hh))
  (progn
    (print "zbyt duza wysokosc!"))
  )

zad dom:

(print "program rysuj¹cy")
;(command "_line" (list 0 0) (list 0 100) (list 100 100) (list 100 100)"_c")

(setq x1 0)
(setq y1 0)
(setq z1 0)
(setq r1  20)
(print "podaj ilosc kolumn:")
(setq kolumny (getint))
(print "podaj ilosc wierszy:")
(setq wiersze (getint))
(print "podaj odstep:")
(setq odstep(getdist))

(if (> odstep r1)
  (progn
(repeat kolumny
  (progn
  (setq ii 0)
  (while (< ii wiersze) 
  (progn
(setq ii (+ 1 ii))
(command "_circle" (list x1 y1 z1) r1)
(command "_extrude" (entlast) "" r1)
(setq x1 (+ odstep x1))
       )	)
  (setq y1 (+ odstep y1))
  (setq x1 0)
  ))
)
  (print "odstep musi byc wiekszy niz promien!") 
)
